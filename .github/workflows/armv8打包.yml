name: armv8打包

on:
  repository_dispatch:
    types: [db]
  workflow_dispatch:
    inputs:
      ssh:
        description: 'db'
        required: false
        default: 'false'
  schedule:
    - cron: 30 23 * * 5

env:
  UPLOAD_BIN_DIR: true
  UPLOAD_RELEASE: true

jobs:

  kbuild0: #开发+0版
    runs-on: ubuntu-18.04
    steps:    
    - name: Checkout
      uses: actions/checkout@main
    - name: Build firmware #打包
      id: build
      run: |
        cd /opt
        sudo wget https://github.com/8688Add/N1-Actions-Dabao/releases/download/Armbian-55/img+0.tar
        sudo tar xvf *.tar
        sudo xz -d *.img.xz
        sudo tar zxvf *.tar.gz
        sudo mkdir imgs
        sudo mv *.img imgs
        cd /opt/openwrt
        sudo wget https://github.com/8688Add/N1-Actions-Dabao/releases/download/armv8开发版/openwrt-armvirt-64-default-rootfs.tar.gz
        sudo ./mk_s905x3_multi.sh
        sudo ./mk_h6_vplus.sh
        sudo ./mk_s905x2_x96max.sh
        sudo ./mk_s905d_n1.sh
        sudo ./mk_s912_zyxq.sh
        sudo ./mk_s922x_gtking.sh
        sudo ./mk_rk3328_beikeyun.sh
        sudo ./mk_rk3328_l1pro.sh
        sudo ./OLD_mk_n1_opimg.sh
        sudo ./OLD_n1-to-vplus.sh
        cd /opt/openwrt/tmp
        sudo bzip2 *.img
        echo "::set-output name=status::success"
    - name: Upload bin directory #上传artifact
      uses: actions/upload-artifact@main
      if: steps.build.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true' && !cancelled()
      with:
        name: k+0
        path: /opt/openwrt/tmp/*.img.bz2
    - name: Create release #发布
      uses: ncipollo/release-action@v1
      if: env.UPLOAD_RELEASE == 'true' && steps.build.outputs.status == 'success' && !cancelled()
      with:
        allowUpdates: true
        omitBodyDuringUpdate: true
        omitNameDuringUpdate: true
        tag: armv8开发版
        commit: master
        token: ${{ secrets.RELEASES_TOKEN }}
        artifacts: /opt/openwrt/tmp/*.img.bz2


  kbuild: #开发+版
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout
      uses: actions/checkout@main
    - name: Build firmware #打包
      id: build
      run: |
        cd /opt
        sudo wget https://github.com/8688Add/N1-Actions-Dabao/releases/download/Armbian-55/img+.tar
        sudo tar xvf *.tar
        sudo xz -d *.img.xz
        sudo tar zxvf *.tar.gz
        sudo mkdir imgs
        sudo mv *.img imgs
        cd /opt/openwrt
        sudo wget https://github.com/8688Add/N1-Actions-Dabao/releases/download/armv8开发版/openwrt-armvirt-64-default-rootfs.tar.gz
        sudo ./mk_s905x3_multi.sh
        sudo ./mk_h6_vplus.sh
        sudo ./mk_s905x2_x96max.sh
        sudo ./mk_s905d_n1.sh
        sudo ./mk_s912_zyxq.sh
        sudo ./mk_s922x_gtking.sh
        sudo ./mk_rk3328_beikeyun.sh
        sudo ./mk_rk3328_l1pro.sh
        sudo ./OLD_mk_n1_opimg.sh
        sudo ./OLD_n1-to-vplus.sh
        cd /opt/openwrt/tmp
        sudo bzip2 *.img
        echo "::set-output name=status::success"
    - name: Upload bin directory #上传artifact
      uses: actions/upload-artifact@main
      if: steps.build.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true' && !cancelled()
      with:
        name: k+
        path: /opt/openwrt/tmp/*.img.bz2
    - name: Create release #发布
      uses: ncipollo/release-action@v1
      if: env.UPLOAD_RELEASE == 'true' && steps.build.outputs.status == 'success' && !cancelled()
      with:
        allowUpdates: true
        omitBodyDuringUpdate: true
        omitNameDuringUpdate: true
        tag: armv8开发版
        commit: master
        token: ${{ secrets.RELEASES_TOKEN }}
        artifacts: /opt/openwrt/tmp/*.img.bz2

  wbuild0: #稳定+0版
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout
      uses: actions/checkout@main
    - name: Build firmware #打包
      id: build
      run: |
        cd /opt
        sudo wget https://github.com/8688Add/N1-Actions-Dabao/releases/download/Armbian-55/img+0.tar
        sudo tar xvf *.tar
        sudo xz -d *.img.xz
        sudo tar zxvf *.tar.gz
        sudo mkdir imgs
        sudo mv *.img imgs
        cd /opt/openwrt
        sudo wget https://github.com/8688Add/N1-Actions-Dabao/releases/download/armv8稳定版/openwrt-armvirt-64-default-rootfs.tar.gz
        sudo ./mk_s905x3_multi.sh
        sudo ./mk_h6_vplus.sh
        sudo ./mk_s905x2_x96max.sh
        sudo ./mk_s905d_n1.sh
        sudo ./mk_s912_zyxq.sh
        sudo ./mk_s922x_gtking.sh
        sudo ./mk_rk3328_beikeyun.sh
        sudo ./mk_rk3328_l1pro.sh
        sudo ./OLD_mk_n1_opimg.sh
        sudo ./OLD_n1-to-vplus.sh
        cd /opt/openwrt/tmp
        sudo bzip2 *.img
        echo "::set-output name=status::success"
    - name: Upload bin directory #上传artifact
      uses: actions/upload-artifact@main
      if: steps.build.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true' && !cancelled()
      with:
        name: w+0
        path: /opt/openwrt/tmp/*.img.bz2
    - name: Create release #发布
      uses: ncipollo/release-action@v1
      if: env.UPLOAD_RELEASE == 'true' && steps.build.outputs.status == 'success' && !cancelled()
      with:
        allowUpdates: true
        omitBodyDuringUpdate: true
        omitNameDuringUpdate: true
        tag: armv8稳定版
        commit: master
        token: ${{ secrets.RELEASES_TOKEN }}
        artifacts: /opt/openwrt/tmp/*.img.bz2


  wbuild: #稳定+版
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout
      uses: actions/checkout@main
    - name: Build firmware #打包
      id: build
      run: |
        cd /opt
        sudo wget https://github.com/8688Add/N1-Actions-Dabao/releases/download/Armbian-55/img+.tar
        sudo tar xvf *.tar
        sudo xz -d *.img.xz
        sudo tar zxvf *.tar.gz
        sudo mkdir imgs
        sudo mv *.img imgs
        cd /opt/openwrt
        sudo wget https://github.com/8688Add/N1-Actions-Dabao/releases/download/armv8稳定版/openwrt-armvirt-64-default-rootfs.tar.gz
        sudo ./mk_s905x3_multi.sh
        sudo ./mk_h6_vplus.sh
        sudo ./mk_s905x2_x96max.sh
        sudo ./mk_s905d_n1.sh
        sudo ./mk_s912_zyxq.sh
        sudo ./mk_s922x_gtking.sh
        sudo ./mk_rk3328_beikeyun.sh
        sudo ./mk_rk3328_l1pro.sh
        sudo ./OLD_mk_n1_opimg.sh
        sudo ./OLD_n1-to-vplus.sh
        cd /opt/openwrt/tmp
        sudo bzip2 *.img
        echo "::set-output name=status::success"
    - name: Upload bin directory #上传artifact
      uses: actions/upload-artifact@main
      if: steps.build.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true' && !cancelled()
      with:
        name: w+
        path: /opt/openwrt/tmp/*.img.bz2
    - name: Create release #发布
      uses: ncipollo/release-action@v1
      if: env.UPLOAD_RELEASE == 'true' && steps.build.outputs.status == 'success' && !cancelled()
      with:
        allowUpdates: true
        omitBodyDuringUpdate: true
        omitNameDuringUpdate: true
        tag: armv8稳定版
        commit: master
        token: ${{ secrets.RELEASES_TOKEN }}
        artifacts: /opt/openwrt/tmp/*.img.bz2  
  
  over:
    needs: [kbuild0, kbuild, wbuild0, wbuild]
    runs-on: ubuntu-18.04
    steps:
    #- name: WeChat notification #微信推送
    #  run: curl https://sc.ftqq.com/${{ secrets.ServerChan }}.send?text=armv8打包成功
    - name: TG notification #TG推送
      run: curl "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}&text=armv8打包成功"
